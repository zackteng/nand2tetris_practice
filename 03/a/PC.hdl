// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // reset 
    Mux16(a=out1, b=false, sel=reset, out=out2);
    // load
    Mux16(a=out1, b=in, sel=load, out=out3);
    // inc
    Inc16(in=out1, out=out4);
    Mux16(a=out3, b=out4, sel=inc, out=out5);
    
    // select the output to register
    Mux8Way16(a=out5, b=out2, c=out3, d=out2, e=out5, f=out2, g=out3, h=out2, sel[0]=reset, sel[1]=load, sel[2]=inc, out=out6);

    Or8Way(in[0]=reset, in[1]=load, in[2]=inc, in[3..7]=false, out=orout);
    Register(in=out6, load=orout, out=out1, out=out);
    // Put your code here:
}
